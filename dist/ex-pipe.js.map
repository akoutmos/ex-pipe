{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d3d4c801273f8f2fa471","webpack:///./src/ex-pipe.js"],"names":["ExecPipe","GenPipe","initialInput","input","output","nextFunctions","length","nextPipe","shift","Array","isArray","func","args","functions"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;SCrCIA,Q,GAAAA,Q;SACAC,O,GAAAA,O;;AAGJ;;;;;;;AAMA,UAASD,QAAT,CAAmBE,YAAnB,EAAmD;AAC/C,SAAIC,QAAQD,YAAZ;AACA,SAAIE,SAASF,YAAb;;AAF+C,uCAAfG,aAAe;AAAfA,sBAAe;AAAA;;AAI/C,YAAOA,cAAcC,MAArB,EAA6B;AACzB,aAAIC,WAAWF,cAAcG;;AAE7B;AAFe,WAAf,CAGA,IAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAChCH,sBAASG,SAASJ,KAAT,CAAT;AACH,UAFD,MAEO,IAAIM,MAAMC,OAAN,CAAcH,QAAd,CAAJ,EAA6B;AAAA,sCACVA,QADU;AAAA,iBAC3BI,IAD2B;AAAA,iBAClBC,IADkB;;AAEhCR,sBAASO,uBAAKR,KAAL,4BAAeS,IAAf,GAAT;AACH;;AAEDT,iBAAQC,MAAR;AACH;;AAED,YAAOA,MAAP;AACH;;AAED;;;;;;AAMA,UAASH,OAAT,GAAgC;AAAA,wCAAXY,SAAW;AAAXA,kBAAW;AAAA;;AAC5B,YAAO,UAAUX,YAAV,EAAwB;AAC3B,gBAAOF,2BAASE,YAAT,SAA0BW,SAA1B,EAAP;AACH,MAFD;AAGH,E","file":"ex-pipe.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"exPipe\"] = factory();\n\telse\n\t\troot[\"exPipe\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d3d4c801273f8f2fa471\n **/","export {\n    ExecPipe,\n    GenPipe\n}\n\n/**\n *\n * Pipe is a simple utility that attempts to mimic the\n * pipe '|>' functionality found in Elixir, but in JS\n *\n */\nfunction ExecPipe (initialInput, ...nextFunctions) {\n    let input = initialInput\n    let output = initialInput\n\n    while (nextFunctions.length) {\n        let nextPipe = nextFunctions.shift()\n\n        // Deal with the next element in the pipeline\n        if (typeof nextPipe === 'function') {\n            output = nextPipe(input)\n        } else if (Array.isArray(nextPipe)) {\n            let [func, ...args] = nextPipe\n            output = func(input, ...args)\n        }\n\n        input = output\n    }\n\n    return output\n}\n\n/**\n *\n * This is used to create a reusable pipeline of\n * functions\n *\n */\nfunction GenPipe (...functions) {\n    return function (initialInput) {\n        return ExecPipe(initialInput, ...functions)\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ex-pipe.js\n **/"],"sourceRoot":""}